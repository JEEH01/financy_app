name: Distribute to Firebase

on:
  workflow_dispatch:
    inputs:
      target:
        description: "The environment to what this action will distribute the build to"
        type: choice
        required: true
        options: 
        - prod
        - adhoc
        


env:
  JAVA_VERSION: 17
  FLUTTER_VERSION: '3.16.7'
  FLUTTER_CHANNEL: 'stable'
  PROFILE_NAME: financy_${{inputs.target}}

jobs:
  build:
    runs-on: macos-latest
    env:
      IOS_KEYS: ${{ secrets.IOS_KEYS }}
      DISTRIBUTION_CERTIFICATE_BASE64: ${{ secrets.DISTRIBUTION_CERTIFICATE_BASE64 }}
      ADHOC_PROVISION_PROFILE_BASE64: ${{ secrets.ADHOC_PROVISION_PROFILE_BASE64 }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'adopt'

      - name: Set up Flutter ${{ env.FLUTTER_VERSION }}
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: ${{ env.FLUTTER_CHANNEL }}
          cache: true

      - name: Create build signing files
        run: |
          base64 -d <<< "${{ secrets.KEYSTORE }}" > android/app/upload-keystore.jks
          base64 -d <<< "${{ secrets.KEY_PROPERTIES }}" > android/key.properties

      - name: Build Android APK
        run: flutter build appbundle --dart-define=GRAPHQL_ENDPOINT=https://api.financy.kaio.dev/v1/graphql
      
      - name: Upload Android artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-apk
          path: build/app/outputs/bundle/release/*.aab

      - name:  Install the Apple certificate and provisioning profile
        run: |
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db
          PP_PATH=$RUNNER_TEMP/$PROFILE_NAME.mobileprovision
          CERTIFICATE_PATH=$RUNNER_TEMP/distribution-financy.p12

          # import certificate and provisioning profile from secrets
          echo -n "$DISTRIBUTION_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH
          echo -n "$ADHOC_PROVISION_PROFILE_BASE64" | base64 --decode -o $PP_PATH

          # create temporary keychain
          security create-keychain -p "$IOS_KEYS" "$KEYCHAIN_PATH"
          security set-keychain-settings -lut 21600 "$KEYCHAIN_PATH"
          security default-keychain -s $KEYCHAIN_PATH
          security unlock-keychain -p "$IOS_KEYS" "$KEYCHAIN_PATH"
          
          # import certificate to keychain
          security import "$CERTIFICATE_PATH" -P "$IOS_KEYS" -A -t cert -f pkcs12 -k "$KEYCHAIN_PATH"
          security set-key-partition-list -v -S apple-tool:,apple: -s -k "$IOS_KEYS" "$KEYCHAIN_PATH"
          security list-keychains

          # apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp "$PP_PATH" ~/Library/MobileDevice/Provisioning\ Profiles
          ls ~/Library/MobileDevice/Provisioning\ Profiles
          

      - name: Build iOS app
        run: |
          flutter build ipa --export-options-plist=ios/ExportOptions-${PROFILE_NAME}.plist --dart-define=GRAPHQL_ENDPOINT=https://api.financy.kaio.dev/v1/graphql

      - name: Upload iOS artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-ipa
          path: build/ios/ipa/*.ipa


  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Collect apk artifacts
        uses: actions/download-artifact@v4
        with:
          name: release-apk

      - name: Distribute APK to Firebase
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{ secrets.FIREBASE_ANDROID_APP_ID }}
          serviceCredentialsFileContent: ${{ secrets.FIREBASE_SERVICE_CREDENTIALS_CONTENT }}
          groups: "testers"
          releaseNotes: "This is a test release ${{ github.sha }}"
          file: "app-release.aab"

      - name: Collect ipa artifacts
        uses: actions/download-artifact@v4
        with:
          name: release-ipa

      - name: Distribute IPA to Firebase
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{ secrets.FIREBASE_IOS_APP_ID }}
          serviceCredentialsFileContent: ${{ secrets.FIREBASE_SERVICE_CREDENTIALS_CONTENT }}
          groups: "testers"
          releaseNotes: "This is a test release ${{ github.sha }}"
          file: "financy_app.ipa"
